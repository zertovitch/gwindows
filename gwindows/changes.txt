Major changes - numbers below refer to svn repository revisions
===============================================================

    Revision N can be currently seen at the following URL:
      https://sourceforge.net/p/gnavi/code/N/
    Latest revision:
      https://sourceforge.net/p/gnavi/code/
    From SVN, you can see all changes between two revisions A and B with "svn log -rA:B".

GWindows upcoming release
=========================

GWindows release, 01-Jan-2021 [rev. 397]
========================================

391: GWindows.Common_Controls.List_View: added Ensure_Visible.
387: (contrib) GWin_Util package: added Explorer_Context_Menu.
386: GWindows.Registry and GWindows.Errors work in 64-bit mode too.
385: GWindows.Windows.MDI: added function Count_MDI_Children.
384: (contrib) Added GWin_Util package.

GWindows release, 31-Jul-2020 [rev. 383]
========================================

379: Moved type Extended_Style_Type and methods Set_Extended_Style
        and Remove_Extended_Style for type Ex_List_View_Control_Type in
        package GWindows.Common_Controls.Ex_List_View
        to parent package GWindows.Common_Controls,
        for type List_View_Control_Type.
377: GWindows.Common_Dialogs: Choose_[Default_]Printer works
        in 64-bit mode too.

GWindows release, 01-Sep-2019 [rev. 376]
========================================

371: Moved function Select_Item from GWindows.Common_Controls.Ex_TV
     and GWindows.Common_Controls.Ex_TV_Generic to parent type
     in GWindows.Common_Controls.
363: GWindows.Common_Controls.Ex_List_View: eventually overriden Sort
     is called also on a click on a header
359: Moved Paint_Transparent_Bitmap to new GWindows.Drawing.Extended
     from GWindows.Drawing (some versions of GCC issue a linker error)

GWindows release, 30-Aug-2018 [rev. 357]
========================================

354: GWenerator: implemented BS_MULTILINE style for buttons, call to Multi_Line is generated
353: GWindows.Buttons: added Multi_Line method for Button_Type
352: GWenerator & RC2GW: all files written are lower case
346: GWindows.Application: added Explorer_Path_At_Location
345: GWindows.Application: added Is_Desktop_At_Location
343: GWindows.Application: added Get_Window_Root_Class_Name_At_Location
339: GWindows.Application: added Get_Window_Class_Name_At_Location
337: GWindows.Application: added Get_Window_Title_At_Location
335: GWindows Tutorial 24: drag and drop working from ListView
331: GWindows.Common_Controls: added Column_Text function to List_View_Control_Type (consequently, removed from GWindows.Common_Controls.Ex_List_View)
328: GWindows.Clipboard: the clipboard is ANSI/Unicode-agnostic both ways (copy & paste).
325: GWindows.Databases: get/set of timeouts for connection and command
322: GWindows.Databases: added function Simple_Query
318: GWindows.Taskbar compatible with both 32 and 64 bit Windows
313: GWindows.Common_Controls: added procedure Set_As_Control_Parent (Control : in out Tab_Window_Control_Type);

GWindows release, 11-Nov-2017
=============================

295:      GWenerator: correct creation of Drop Down List Boxes
289:      GWindows.Scintilla: added commands for multiline editing
286, 307: GWindows.Scintilla: added SCI_Lexer_DLL_Successfully_Loaded, Try_Loading_Lexer_DLL
276, 275: GWindows.Common_Controls: fixes regarding Progress_Control_Type and Up_Down_Control_Type


GWindows release, 10-May-2016
=============================

251: GWindows.Locales: added list separator (for Excel's CSV files)

GWindows release, 27-Oct-2014
=============================

242: Added Paint_Transparent_Bitmap in GWindows.Drawing
241: GWindows.Common_Dialogs: added Choose_Named_Printer
239: GWindows.Drawing: added a version of Paint_Bitmap with image stretching

GWindows release,  5-Apr-2014
=============================

228: Added GWindows.Menus.Immediate_Popup_Menu
225: Added GWindows.Taskbar and Test_Taskbar
216: Added GWindows.System_Tray and Test_System_Tray
213: Added GWindows.Locales and Test_Locales

GWindows release, 28-Sep-2013
=============================

206: GWindows.Common_Controls: added Item_At_Position method for Tree_View_Control_Type
205: Beginning of a new tutorial #24 about Drag & Drop

GWindows release, 22-Dec-2012
=============================

195: GWindows.Common_Dialogs: Get_Directory with optional initial path
180: GWindows.Windows: Drop Files support Unicode names
179: GWindows.Common_Dialogs: Open_File, Open_Files, Save_File, Get_Directory support Unicode names
173: GWindows.Common_Controls: List_View_Control_Type: added Column_Width function
170: GWindows.Common_Dialogs: added Open_Files
166: GWindows.Common_Controls: added method On_Item_Changed to List_View_Control_Type
158: GWindows.Common_Controls: List_View_Control_Type: Insert_Item also with Sorted_Index as 'out' parameter
157: GWindows framework compatible (again) with Ada 95


GWindows release, 10-Jul-2012
=============================

Release notes.
Improvements compared to the March 7th version are (numbers below refer to svn repository revisions):

147: GWindows.Simple_sheet: added clipboard functionalities
139: GWindows.Clipboard is part of the release installer package
137: Edit_Box'es have the Read_Only option on creation
136: Create_font has optionally a Char_Set choice
135: GWindows is working properly on dual screens


Important changes from version 1.3 to March 2012
================================================

-----------------------------
New Features and major fixes:
-----------------------------

101: Added support for 64-bits Windows.
109: Corrected (harmless) parameter bug in the GWindows framework

----------------
Minor additions:
----------------

28: GWindows.Clipboard: Added interfaces to use the Windows clipboard (only available through SVN checkout, win32ada dependency to be fixed).
59: GWindows.Common_Controls: added Select_Item for the Tree_View_Control_Type
60: GWindows-Image_lists.adb: flag to enable more than 16 colors
62: GWindows.Common_Controls: improvements to Tree_View_Control_Type: + Text(treeview, node, text), + On_Selection_Change
63: GWindows.Static_Controls: Label_Type.Create and Create_Label with a Border option
64: GWindows.Static_Controls: Labl_Type and Borders: fixes
68: GWindows.Common_Controls: made Size_Grip optional (irrelevant on unsizable windows)
70: GWindows: added Direction and Smooth options to progress bar control
74: GWindows.Common_Dialogs: Added options to extend the standard windows file dialog with a resource template and callback function.
88: GWindows: added GWindows.Static_Controls.Web
89: GWindows: added GWindows.Buttons.Owner_Drawn 
92: GWindows: added GWindows.Buttons.Graphic (technically, buttons with BS_BITMAP or BS_ICON)
108: Added a contributed package GWindows.Simple_sheet, a spreadsheet widget
125: Updated main GWindows headers (comments only)



Changes Since 1.2
=================

----------------
General Changes:
----------------

The directory bindings has been renamed framework to reflect its expanded nature


-------------
New Features:
-------------

Added to GWindows.Base - Set_Standard_Font

Added create method to GWindows.Panels.Panel_Type

Added additional string handling packages under GWindows.GStrings

Added to GWindows.Cursors Start_Wait_Cursor and End_Wait_Cursor

Added to GWindows.Windows.Window_Type write only properties:
      Default_Cursor
      Default_System_Cursor

Added procedure Activate to GWindows.Windows.MDI.MDI_Child_Window_Type to
      allow for child window to activate itself with its parent

You can now set the icons of windows from a GWindows.Drawing_Objects.Icon_Type

Dock_Children is now called after On_Create is fired for all creation methods
      of GWindows.Windows it is also called in an on_size regardless if an
      on_size handler is set or not

The MDI_Child_Window of an MDI_Top_Window now by default has the Dock property
set to Fill and can now be changed to any other dock position

Now GWindows.GControls exists as the base class for GWindows based controls
      implemented completely in GWindows and not based in Win32 controls,
      common controls, or custom controls.

Added GWindows.GControls.Size_Bars that can be docked on to the sides of
      windows and panels and will automaticly resize their parent control
      when dragged with the mouse allowing for easy creation of splitters,
      trays, etc.
      See the new example samples\simple\splitters.adb

Packing Boxes insets can now be set as individual properties

Added Run_Mode to windows so that a window or control knows if it is in
the various processes of development in GNAVI or in a normal running
environment.

Added Angle to Create_Font to allow for creating fonts at 10ths of a
degree from base

Added ability to retrieve font metrics of font selected in to canvas

Added Background Color type to GWindows.Window_Type

Added ability to add custom data to any window or control with the custom_data
property

Packing boxes can now auto resize to their contents. Additional hooks were
added to automaticly pack child packing_boxes when packing_boxes are resized
or when ever the parent windows Dock_Children is called.

----------
Bug Fixes:
----------

Fixed problem with Packing Boxes enumerating children of children and
as such preventing the nesting of packing boxes.

Listboxes scroll bars not showing when list expanded

Fix to MDI child windows not setting menu until receiving an MDI_Activate
event.

Fixed panels - when set to raised was drawing a sunken border

Fixed - Rich Edit Boxes require preloading the riched20.dll. This is done in
the body of GWindows.Edit_Boxes.Rich, so a pragma has been added to insure
the elaboration of the body will take place before attempts will be made to
use the control

Fixed - Register_Class did nothing, now properly registers a Win32 class

Added CClass to MDI create procedures

Various changes for compilation under GNAT 5

Fixed - Doing a Get_Font on a window caused that window's internal font to
      be deleted when the received font went out of scope.